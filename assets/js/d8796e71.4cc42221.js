"use strict";(self.webpackChunkdjango_wiki=self.webpackChunkdjango_wiki||[]).push([[9695],{1504:(e,i,a)=>{a.d(i,{Z:()=>l});var t=a(7294),n=a(7273);n.Z.initialize({startOnLoad:!0});const l=e=>{let{chart:i}=e;return(0,t.useEffect)((()=>{n.Z.contentLoaded()}),[]),t.createElement("div",{className:"mermaid"},i)}},4523:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>d,contentTitle:()=>m,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>k});var t=a(7462),n=(a(7294),a(3905)),l=a(1504);const r={sidebar_position:1,custom_edit_url:null,description:"\u0130leri seviye Git komutlar\u0131na bak\u0131yoruz"},m="\u0130leri Seviye Git",o={unversionedId:"python/django/patika/page1",id:"python/django/patika/page1",title:"\u0130leri Seviye Git",description:"\u0130leri seviye Git komutlar\u0131na bak\u0131yoruz",source:"@site/docs/python/django/patika/page1.mdx",sourceDirName:"python/django/patika",slug:"/python/django/patika/page1",permalink:"/django-wiki/docs/python/django/patika/page1",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,custom_edit_url:null,description:"\u0130leri seviye Git komutlar\u0131na bak\u0131yoruz"},sidebar:"tutorialSidebar",previous:{title:"Patika Yol Haritas\u0131",permalink:"/django-wiki/docs/category/patika-yol-haritas\u0131"},next:{title:"Python Notlar\u0131",permalink:"/django-wiki/docs/python/django/patika/page2"}},d={},k=[{value:"Temel Git Komutlar\u0131",id:"temel-git-komutlar\u0131",level:2},{value:"Git ile Branch ve Stash \xdczerine \xc7al\u0131\u015fma",id:"git-ile-branch-ve-stash-\xfczerine-\xe7al\u0131\u015fma",level:2},{value:"Git ile Merge, Rebase ve Conflict",id:"git-ile-merge-rebase-ve-conflict",level:2}],s={toc:k};function u(e){let{components:i,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},s,a,{components:i,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"i\u0307leri-seviye-git"},"\u0130leri Seviye Git"),(0,n.kt)("p",null,"Burada Git i\xe7erisindeki temel komutlar\u0131 \xf6\u011freniyoruz. "),(0,n.kt)("p",null,"Temel komutlar\u0131m\u0131z\u0131 yazmada fayda var"),(0,n.kt)("h2",{id:"temel-git-komutlar\u0131"},"Temel Git Komutlar\u0131"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git init")," ile local repomuzu olu\u015ftururuz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git add")," ile eklenecek dosyalar\u0131 i\u015faretleriz. Burada ",(0,n.kt)("inlineCode",{parentName:"li"},"git add .")," demek t\xfcm dosyalar\u0131 ekleyecektir."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git status")," ile dosyalar\u0131n durumuna bakar\u0131z. Bu komut bize de\u011fi\u015fiklikleri veya haz\u0131rdaki commitleri mesajlar\u0131 ile g\xf6sterir."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'git commit -m "Mesaj"')," ile commitimizi g\xf6ndeririz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git log")," ile ge\xe7mi\u015f commitlerimizi g\xf6rebiliriz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git commit --amend")," ile dosyadaki de\u011fi\u015fikli\u011fi son commite yeniden yazabilir ve bir daha commit atmay\u0131 engelleyebiliriz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'git commit --amend -m "Yeni mesaj"')," ile son committeki a\xe7\u0131klamay\u0131 g\xfcncelleyebiliriz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git reset --hard commitid")," ile verilen commit ID'ye kadar olan t\xfcm commitleri temizler. Ancak pek kullan\u0131lmas\u0131 \xf6nerilmez (commit ID'nin ilk 7 basama\u011f\u0131n\u0131n olmas\u0131 yeterlidir)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git revert commitid")," ile verilen commit ID\u2019ye g\xf6re o committeki de\u011fi\u015fiklikleri iptal ederiz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git diff commitid..commitid filename")," iki commit ID aras\u0131nda filename isimli dosyada ne de\u011fi\u015fiklikler oldu\u011funu g\xf6rebilliriz.")),(0,n.kt)("h2",{id:"git-ile-branch-ve-stash-\xfczerine-\xe7al\u0131\u015fma"},"Git ile Branch ve Stash \xdczerine \xc7al\u0131\u015fma"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git branch")," mevcut branchleri g\xf6rebiliriz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git branch name")," ile name isimli yeni bir branhc a\xe7ar\u0131z ancak sistem bu branch'i kullanmaz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git checkout name")," ile name isimli branch'a ge\xe7i\u015f yapm\u0131\u015f oluruz.")),(0,n.kt)("admonition",{title:"HATIRLATMA",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"master branch'i d\xfczenlemelerin olaca\u011f\u0131 bir branch olmamal\u0131d\u0131r. Buradaki veriler m\xfcmk\xfcn oldu\u011funca final halde olmal\u0131d\u0131r.")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git checkout -b name")," ile name isimli branch a\xe7\u0131p bu brancha direkt ge\xe7i\u015f yapabiliriz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git branch -D name")," ile name isimli branch'i sileriz.")),(0,n.kt)("admonition",{title:"B\u0130LG\u0130",type:"info"},(0,n.kt)("p",{parentName:"admonition"},"E\u011fer herhangi bir branch i\xe7inde (master da dahil) bulunurken yeni bir branch a\xe7arsan\u0131z, \xf6nceki branch referans al\u0131n\u0131r ve dosyalar\u0131 da aktar\u0131l\u0131r. Ancak yeni branch i\xe7inde yeni dosya a\xe7\u0131p \xf6nceki branch'e ge\xe7erseniz yeni branch i\xe7indeki dosyalar g\xf6r\xfcnmeyecektir.")),(0,n.kt)("p",null,"Bu bilgiyi \u015f\xf6yle \u015fekillendirebiliriz"),(0,n.kt)(l.Z,{chart:"\nflowchart TB;\nsubgraph master;\nintro[intro.md];\nend;\nsubgraph first[first branch];\nintro2[intro.md];\nfirstmd[first.md];\nend;\nsubgraph second[second branch];\nintro3[intro.md];\nfirstmd2[first.md];\nseconmd[second.md];\nend;\nmaster--\x3efirst--\x3esecond;\nintro--\x3eintro2--\x3eintro3;\nfirstmd--\x3efirstmd2;\n",mdxType:"Mermaid"}),(0,n.kt)("p",null,"Burada intro dosyas\u0131 master'dan first branch i\xe7ine oradan da second branch i\xe7ine ge\xe7irildi. Ancak first.md first branch i\xe7inde a\xe7\u0131ld\u0131\u011f\u0131 i\xe7in master i\xe7inde mevcut olmayacakt\u0131r."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git stash")," ile commit atmak istemedi\u011fimiz ama bir s\xfcre sonra d\xfczenleyebilece\u011fimiz k\u0131s\u0131mlar\u0131 yedekleyebliriz."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git stash list")," ile listelenen dosyalar\u0131 g\xf6rebiliriz"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git stash clear")," ile listelenen dosyalar\u0131 silebiliriz"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git stash pop")," ile en son bulunan stash kayd\u0131n\u0131 geri getirebiliriz"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"git stash apply stash@{0}")," ile stash@ k\u0131sm\u0131ndaki spesifik bir elemandaki durumu geri getirebiliriz.")),(0,n.kt)("admonition",{title:"YARDIM",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Burada Powershell tipi terminaller kullan\u0131mda hata verebilir. Bunun i\xe7in ",(0,n.kt)("inlineCode",{parentName:"p"},"git stash apply 'stash@{0}'")," \u015feklinde t\u0131rnak i\xe7ine alarak yazabilirsiniz.")),(0,n.kt)("admonition",{title:"B\u0130LG\u0130LEND\u0130RME",type:"info"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("inlineCode",{parentName:"p"},"git stash pop")," ile son eleman gelir ve stash listesinden kalkar ancak ",(0,n.kt)("inlineCode",{parentName:"p"},"git stash apply")," ile eklenen stash verisi direkt olarak sistemden silinmez. Stash i\xe7inde varl\u0131\u011f\u0131n\u0131 s\xfcrd\xfcrmeye devam eder.")),(0,n.kt)("h2",{id:"git-ile-merge-rebase-ve-conflict"},"Git ile Merge, Rebase ve Conflict"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Branch i\xe7indeki de\u011fi\u015fiklikleri master branchine aktarmak i\xe7in \u015fu \u015fekilde \xe7al\u0131\u015fabiliriz. E\u011fer hala master i\xe7indeysek ",(0,n.kt)("inlineCode",{parentName:"li"},"git checkout master")," komutuna gerek yoktur. Ancak ba\u015fka branch i\xe7indeysek o kodu kullanabiliriz.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-git"},"git checkout master\ngit checkout header\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Branch i\xe7indeki de\u011fi\u015fiklikler master i\xe7ine aktar\u0131ld\u0131\u011f\u0131nda t\xfcm commitler de gelecektir ancak ba\u015fkas\u0131n\u0131n commitlere bakmas\u0131 durumunda merge durumunu g\xf6rmesi zor olacakt\u0131r. Bunun \xf6n\xfcne ge\xe7mek i\xe7in ",(0,n.kt)("inlineCode",{parentName:"li"},"git merge --squash branchname")," ile bu i\u015flemi yapabiliriz. Sonras\u0131nda yeni commit a\xe7arak bu merge i\u015flemini belirtebiliriz."),(0,n.kt)("li",{parentName:"ul"},"Merge ederken hata ile kar\u015f\u0131la\u015f\u0131rsak burad dilersek do\u011fru kodu tutup di\u011ferini silip commit de yapabiliriz veya ",(0,n.kt)("inlineCode",{parentName:"li"},"git merge --abort")," yapt\u0131ktan sonra de\u011fi\u015fiklikleri g\xf6zden ge\xe7irip son hali de baz alabiliriz.")))}u.isMDXComponent=!0}}]);