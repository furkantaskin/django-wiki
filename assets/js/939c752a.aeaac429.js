"use strict";(self.webpackChunkdjango_wiki=self.webpackChunkdjango_wiki||[]).push([[9781],{3905:(e,n,a)=>{a.d(n,{Zo:()=>d,kt:()=>c});var t=a(7294);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),m=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},d=function(e){var n=m(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=m(a),c=i,k=p["".concat(s,".").concat(c)]||p[c]||u[c]||r;return a?t.createElement(k,l(l({ref:n},d),{},{components:a})):t.createElement(k,l({ref:n},d))}));function c(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=a.length,l=new Array(r);l[0]=p;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var m=2;m<r;m++)l[m]=a[m];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,n,a)=>{a.d(n,{Z:()=>l});var t=a(7294),i=a(6010);const r="tabItem_Ymn6";function l(e){let{children:n,hidden:a,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,l),hidden:a},n)}},5488:(e,n,a)=>{a.d(n,{Z:()=>c});var t=a(7462),i=a(7294),r=a(6010),l=a(2389),o=a(7392),s=a(7094),m=a(2466);const d="tabList__CuJ",u="tabItem_LNqP";function p(e){var n,a;const{lazy:l,block:p,defaultValue:c,values:k,groupId:y,className:b}=e,f=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=k?k:f.map((e=>{let{props:{value:n,label:a,attributes:t}}=e;return{value:n,label:a,attributes:t}})),v=(0,o.l)(h,((e,n)=>e.value===n.value));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===c?c:null!=(n=null!=c?c:null==(a=f.find((e=>e.props.default)))?void 0:a.props.value)?n:f[0].props.value;if(null!==g&&!h.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:_,setTabGroupChoices:z}=(0,s.U)(),[T,x]=(0,i.useState)(g),N=[],{blockElementScrollPositionUntilNextRender:w}=(0,m.o5)();if(null!=y){const e=_[y];null!=e&&e!==T&&h.some((n=>n.value===e))&&x(e)}const E=e=>{const n=e.currentTarget,a=N.indexOf(n),t=h[a].value;t!==T&&(w(n),x(t),null!=y&&z(y,String(t)))},O=e=>{var n;let a=null;switch(e.key){case"ArrowRight":{var t;const n=N.indexOf(e.currentTarget)+1;a=null!=(t=N[n])?t:N[0];break}case"ArrowLeft":{var i;const n=N.indexOf(e.currentTarget)-1;a=null!=(i=N[n])?i:N[N.length-1];break}}null==(n=a)||n.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":p},b)},h.map((e=>{let{value:n,label:a,attributes:l}=e;return i.createElement("li",(0,t.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:e=>N.push(e),onKeyDown:O,onFocus:E,onClick:E},l,{className:(0,r.Z)("tabs__item",u,null==l?void 0:l.className,{"tabs__item--active":T===n})}),null!=a?a:n)}))),l?(0,i.cloneElement)(f.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},f.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==T})))))}function c(e){const n=(0,l.Z)();return i.createElement(p,(0,t.Z)({key:String(n)},e))}},4499:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>m,toc:()=>u});var t=a(7462),i=(a(7294),a(3905)),r=a(5488),l=a(5162);const o={sidebar_position:3,custom_edit_url:null,description:"Python OOP'ta metodlar ve inheritance"},s="Methodlar ve Inheritance",m={unversionedId:"django/patika/ileri-python/page3",id:"django/patika/ileri-python/page3",title:"Methodlar ve Inheritance",description:"Python OOP'ta metodlar ve inheritance",source:"@site/docs/django/patika/ileri-python/page3.mdx",sourceDirName:"django/patika/ileri-python",slug:"/django/patika/ileri-python/page3",permalink:"/django-wiki/docs/django/patika/ileri-python/page3",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,custom_edit_url:null,description:"Python OOP'ta metodlar ve inheritance"},sidebar:"tutorialSidebar",previous:{title:"Python ve S\u0131n\u0131f yap\u0131s\u0131",permalink:"/django-wiki/docs/django/patika/ileri-python/page2"}},d={},u=[{value:"Class ve Static Method",id:"class-ve-static-method",level:2},{value:"Class Method",id:"class-method",level:3},{value:"Static Method",id:"static-method",level:3},{value:"Inheritance",id:"inheritance",level:2}],p=(c="Mermaid",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var c;const k={toc:u};function y(e){let{components:n,...a}=e;return(0,i.kt)("wrapper",(0,t.Z)({},k,a,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"methodlar-ve-inheritance"},"Methodlar ve Inheritance"),(0,i.kt)("p",null,"Art\u0131k Python i\xe7indeki methodlar\u0131 inceleyebiliz. Hat\u0131rlarsak methodlar\u0131 s\u0131n\u0131f i\xe7indeki \xf6zel fonksiyonlar olarak tan\u0131mlam\u0131\u015ft\u0131k. Bunlar\u0131n kendi aralar\u0131nda \xf6zel durumlar\u0131 olabilir. Vakit bunu inceleme vakti."),(0,i.kt)("h2",{id:"class-ve-static-method"},"Class ve Static Method"),(0,i.kt)("p",null,"Normalde \xf6nceden instancelar \xfczerinden i\u015flemler yap\u0131yor ve metodlar\u0131 bu instancelar i\xe7in \xe7a\u011f\u0131r\u0131yorduk. Ancak baz\u0131 durumlarda bunu s\u0131n\u0131fa vermemiz ve s\u0131n\u0131f i\xe7indeki metodlarda i\u015flemler yapmam\u0131z gerekebilir. Bunun i\xe7in \xe7e\u015fitli metodlar\u0131m\u0131z mevcut. Bunlara class method ve static method diyoruz."),(0,i.kt)("h3",{id:"class-method"},"Class Method"),(0,i.kt)("p",null,"\xd6rne\u011fin \xf6nceki \xf6rne\u011fimizde bir \xe7al\u0131\u015fan s\u0131n\u0131f\u0131m\u0131z vard\u0131 ve zam i\xe7in bir metod kullan\u0131yorduk. Bunu t\xfcm personeller i\xe7in yap\u0131yorduk. Bunun yerine biz bunu s\u0131n\u0131f i\xe7erisinde direkt olarak de\u011fi\u015ftirerek t\xfcm personellerin bu zam oran\u0131ndan faydalanmas\u0131n\u0131 istiyorsak e\u011fer burada kullanabiliriz."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},"class Employee():\n    raise_percent = 1.05\n    # This line active\n    num_emp = 0\n    \n    def __init__(self, name, last, age, pay):\n        self.name = name\n        self.last = last\n        self.age = age\n        self.pay = pay\n        # This line active\n        Employee.num_emp += 1\n    \n    def apply_raise(self):\n        self.pay = self.pay * Employee.raise_percent\n\n    @classmethod\n    def set_raise(cls, amount):\n        cls.raise_percent = amount\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Class method parametre olarak ",(0,i.kt)("inlineCode",{parentName:"p"},"self")," yerine ",(0,i.kt)("inlineCode",{parentName:"p"},"cls")," al\u0131r.")),(0,i.kt)("p",null,"Peki nerelerde kullanabiliriz? Normalde biz bir \xe7al\u0131\u015fan olu\u015ftururken ",(0,i.kt)("inlineCode",{parentName:"p"},'emp_1 = Employee("Furkan", "Ta\u015fk\u0131n", 26, 1000)')," \u015feklinde olu\u015fturuyorduk. Ancak bu input bize farkl\u0131 gelebilir. \xd6rne\u011fin bize ",(0,i.kt)("inlineCode",{parentName:"p"},'emp_1="Furkan-Ta\u015fk\u0131n-26-1000"')," \u015feklinde bir string olarak da gelebilir. Bu arkada\u015f\u0131 i\xe7eriye eklemek i\xe7in uzun uzun variable unpacking de yapabiliriz ya da bu tarz inputlar\u0131 otomatik hale de getirebiliriz. Mesela"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'class Employee():\n    raise_percent = 1.05\n    # This line active\n    num_emp = 0\n    \n    def __init__(self, name, last, age, pay):\n        self.name = name\n        self.last = last\n        self.age = age\n        self.pay = pay\n        # This line active\n        Employee.num_emp += 1\n    \n    def apply_raise(self):\n        self.pay = self.pay * Employee.raise_percent\n\n    @classmethod\n    def set_raise(cls, amount):\n        cls.raise_percent = amount\n\n    @classmethod\n    def from_string(cls,emp_str):\n        name, last, age, pay = emp_str.split("-")\n        return cls(name,last, int(age), float(pay))\n\nemp_1_str = "Furkan-Ta\u015fk\u0131n-26-1000"\nemp_2_str = "Di\u011fer-Furkan-22-200"\n\nemp_1 = Employee.from_string(emp_1_str)\nemp_1.pay # 1000 ifadesi d\xf6necektir\n')),(0,i.kt)("h3",{id:"static-method"},"Static Method"),(0,i.kt)("p",null,"Normalde s\u0131n\u0131f veya \xf6rnekleri (instance) \xfczerinde i\u015flemler i\xe7in metodlar kullan\u0131yorduk; ancak bu her zaman s\u0131n\u0131f veya \xf6rneklere ba\u011fl\u0131 olarak i\u015flem yapaca\u011f\u0131m\u0131z anlam\u0131na gelmiyor. Yeri gelince sadece temel bir i\u015flemi de g\xf6rmemiz gerekebilir. \xd6rne\u011fin o g\xfcn\xfcn tatil olup olmad\u0131\u011f\u0131n\u0131 bilmemiz gerekiyorsa bunu static metod olarak da tan\u0131mlayabiliriz. "),(0,i.kt)("details",null,(0,i.kt)("summary",null,"\u0130PU\xc7LARI"),(0,i.kt)("p",null,"Normalde neden statik metodu bir s\u0131n\u0131f i\xe7ine almam\u0131za gerek var ki diyebiliriz. \xc7\xfcnk\xfc bunu d\u0131\u015far\u0131dan bir fonksiyon ile \xe7a\u011f\u0131r\u0131p ekrana yazd\u0131rmak da ayn\u0131 i\u015flemi g\xf6recektir. Ancak \u015funu unutmamak gerekir ki OOP prensibinden her i\u015flemin bir nesne i\xe7erisinde o nesneye \xf6zg\xfc olarak yap\u0131lmas\u0131 daha uygun olacakt\u0131r. \xc7\xfcnk\xfc okunabilirlik ve fonksiyonellik OOP'un temellerinden baz\u0131lar\u0131d\u0131r.",(0,i.kt)("p",null,"\xd6rne\u011fin personellerimizle tek tek ili\u015fkili olmayan ama t\xfcm personelleri ilgilendiren bir olay d\xfc\u015f\xfcnelim. Bunu personelimizin s\xf6zle\u015fmeleri olarak d\xfc\u015f\xfcnebiliriz. S\xf6zle\u015fmeler t\xfcm personellerde ayn\u0131 kaideyi g\xfctmektedir. Bu t\xfcr s\xf6zle\u015fmeler personelleri kapsar ancak her personel i\xe7in ayr\u0131 bir i\u015flem gerektirmez. \u0130\u015fte bu tarz durumlar i\xe7in statik metod idealdir."),(0,i.kt)("p",null,"Mesela personellerimizin s\xf6zle\u015fmelerini ekrana d\xf6nd\xfcren bir statik metod ekleyelim"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-py"},'class Employee():\n    raise_percent = 1.05\n    # This line active\n    num_emp = 0\n    \n    def __init__(self, name, last, age, pay):\n        self.name = name\n        self.last = last\n        self.age = age\n        self.pay = pay\n        # This line active\n        Employee.num_emp += 1\n    \n    def apply_raise(self):\n        self.pay = self.pay * Employee.raise_percent\n\n    @classmethod\n    def set_raise(cls, amount):\n        cls.raise_percent = amount\n\n    @classmethod\n    def from_string(cls,emp_str):\n        name, last, age, pay = emp_str.split("-")\n        return cls(name,last, int(age), float(pay))\n    \n    @staticmethod\n    def print_obligations_txt():\n        obligations = """\n        Beautiful is better than ugly.\n        Explicit is better than implicit.\n        Simple is better than complex.\n        Complex is better than complicated.\n        Flat is better than nested.\n        Sparse is better than dense.\n        """\n        return obligations\n    \n    @staticmethod\n    def is_holiday(day):\n        if day == "weekend"\n            print("This is an off day")\n        else:\n            print("This is not an off day")\n\nprint(Employee.get_employee_legal_obligations_txt())\nprint(Employee.is_holiday("weekend"))\n')))),(0,i.kt)("h2",{id:"inheritance"},"Inheritance"),(0,i.kt)("p",null,"Inheritance terimine ",(0,i.kt)("a",{parentName:"p",href:"/django-wiki/docs/django/patika/ileri-python/page2"},"\xf6nceki konumuzda")," k\u0131saca de\u011finmi\u015ftik. \xd6zetlemek gerekirse \xfcst bir s\u0131n\u0131f veya s\u0131n\u0131flardan yeni bir s\u0131n\u0131f t\xfcretme olay\u0131n inheritance (kal\u0131t\u0131m) diyoruz. Burada t\xfcreten s\u0131n\u0131fa super/parent ve t\xfcretilen s\u0131n\u0131fa sub/child denilebilir."),(0,i.kt)("p",null,"Normalde inheritance kendi i\xe7erisinde \xe7ok say\u0131da \xe7e\u015fit i\xe7ermektedir. Genel olarak elimizde 6 farkl\u0131 kal\u0131t\u0131m t\xfcr\xfc bulunmaktad\u0131r.Bunlara"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Single Inheritance (Tekil kal\u0131t\u0131m)"),": Tek bir parent ve tek bir child \u015feklindedir. Yani B s\u0131n\u0131f direkt olarak A s\u0131n\u0131f\u0131ndan t\xfcretilmesidir"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Multi-level Inheritance(\xc7ok seviyeli kal\u0131t\u0131m)"),": Bir s\u0131n\u0131ftan t\xfcretilen bir s\u0131n\u0131f, ba\u015fka bir s\u0131n\u0131f\u0131 t\xfcretebilir. Yani A'dan t\xfcretilen B s\u0131n\u0131f\u0131ndan C s\u0131n\u0131f\u0131 da t\xfcretebiliriz."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Multiple Inheritance (\xc7o\u011ful kal\u0131t\u0131m)"),": Birden fazla parent kullanarak bir s\u0131n\u0131f t\xfcretebiliriz. \xd6rne\u011fin C s\u0131n\u0131f, \xf6zg\xfcn iki farkl\u0131 s\u0131n\u0131f olan A ve B s\u0131n\u0131flar\u0131ndan t\xfcretilebilir. Bunu t\u0131pk\u0131 bir aile gibi d\xfc\u015f\xfcnebiliriz."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Multipath Inheritance"),": Bir D s\u0131n\u0131f\u0131 d\xfc\u015f\xfcnelim. Bu D s\u0131n\u0131f\u0131 iki farkl\u0131 B ve C s\u0131n\u0131f\u0131ndan t\xfcretiliyor. Normalde bu \xe7o\u011ful kal\u0131t\u0131m gibi durabilir. Ama asl\u0131nda bu B ve C s\u0131n\u0131f\u0131 ise A s\u0131n\u0131f\u0131ndan t\xfcretilmi\u015ftir. \u0130\u015fte buna multipath inheritance diyoruz."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Hierarchical Inheritance"),": Asl\u0131nda soy a\u011fac\u0131na \xe7ok benzer. Ya da d\xfc\u011f\xfcm a\u011fac\u0131 gibi g\xf6r\xfcnebilir. Detayl\u0131 \xf6rne\u011fi \u015fekilden g\xf6rebiliriz."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Hybrid Inheritance"),": Soy a\u011fac\u0131n\u0131n ta kendisidir. ")),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"single",label:"Single",mdxType:"TabItem"},(0,i.kt)(p,{chart:"\n  flowchart TB;\n  A--\x3eB;\n",mdxType:"Mermaid"})),(0,i.kt)(l.Z,{value:"multi-level",label:"Multi-Level",mdxType:"TabItem"},(0,i.kt)(p,{chart:"\n  flowchart TB;\n  A--\x3eB--\x3eC;\n",mdxType:"Mermaid"})),(0,i.kt)(l.Z,{value:"multiple",label:"Multiple",mdxType:"TabItem"},(0,i.kt)(p,{chart:"\n  flowchart TB;\n  A & B --\x3e C;\n",mdxType:"Mermaid"})),(0,i.kt)(l.Z,{value:"multipath",label:"Multipath",mdxType:"TabItem"},(0,i.kt)(p,{chart:"\n  flowchart TB;\n  A--\x3e B & C --\x3e D; \n",mdxType:"Mermaid"})),(0,i.kt)(l.Z,{value:"hierarchical",label:"Hierarchical",mdxType:"TabItem"},(0,i.kt)(p,{chart:"\n  flowchart TB;\n  A--\x3e B & C;\n  B--\x3e D & E;\n  C--\x3e F & G;\n",mdxType:"Mermaid"})),(0,i.kt)(l.Z,{value:"hybrid",label:"Hybrid",mdxType:"TabItem"},(0,i.kt)(p,{chart:"\n  flowchart TB;\n  A & F--\x3eB\n  A--\x3eC;\n  C--\x3eD & E;\n",mdxType:"Mermaid"}))))}y.isMDXComponent=!0}}]);