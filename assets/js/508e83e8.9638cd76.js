"use strict";(self.webpackChunkdjango_wiki=self.webpackChunkdjango_wiki||[]).push([[5707],{1504:(e,a,i)=>{i.d(a,{Z:()=>r});var l=i(7294),n=i(7273);n.Z.initialize({startOnLoad:!0});const r=e=>{let{chart:a}=e;return(0,l.useEffect)((()=>{n.Z.contentLoaded()}),[]),l.createElement("div",{className:"mermaid"},a)}},5463:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>s,contentTitle:()=>m,default:()=>p,frontMatter:()=>t,metadata:()=>d,toc:()=>o});var l=i(7462),n=(i(7294),i(3905)),r=i(1504);const t={sidebar_position:3,custom_edit_url:null,description:"Nesne Y\xf6nelimli Programlama prensipleri"},m="Nesne Y\xf6nelimli Programlama (OOP)",d={unversionedId:"django/patika/page3",id:"django/patika/page3",title:"Nesne Y\xf6nelimli Programlama (OOP)",description:"Nesne Y\xf6nelimli Programlama prensipleri",source:"@site/docs/django/patika/page3.mdx",sourceDirName:"django/patika",slug:"/django/patika/page3",permalink:"/django-wiki/docs/django/patika/page3",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,custom_edit_url:null,description:"Nesne Y\xf6nelimli Programlama prensipleri"},sidebar:"tutorialSidebar",previous:{title:"Python Notlar\u0131",permalink:"/django-wiki/docs/django/patika/page2"},next:{title:"\u0130leri Python Prensipleri",permalink:"/django-wiki/docs/django/patika/page4"}},s={},o=[{value:"Nesne Y\xf6nelimli Programlama Nedir?",id:"nesne-y\xf6nelimli-programlama-nedir",level:2},{value:"Nesne ve S\u0131n\u0131f Kavramlar\u0131",id:"nesne-ve-s\u0131n\u0131f-kavramlar\u0131",level:2}],k={toc:o};function p(e){let{components:a,...i}=e;return(0,n.kt)("wrapper",(0,l.Z)({},k,i,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"nesne-y\xf6nelimli-programlama-oop"},"Nesne Y\xf6nelimli Programlama (OOP)"),(0,n.kt)("p",null,"Porgramlama dilleri genel olarak belirli paradigmalarla \xe7\xf6z\xfcm sunar. Bunlar\u0131 \u015fu \u015fekilde b\xf6lebiliriz"),(0,n.kt)(r.Z,{chart:"\nflowchart TB;\nparadigmalar[Programlama <br/> Paradigmalar\u0131];\nEmirli;\nBildirimli;\nEmirli---Prosed\xfcrel---Yap\u0131sal---Nesne[Nesne <br/> Y\xf6nelimli];\nBildirimli---Fonksiyonel---Mant\u0131ksal;\nparadigmalar--\x3eEmirli & Bildirimli;\n",mdxType:"Mermaid"}),(0,n.kt)("h2",{id:"nesne-y\xf6nelimli-programlama-nedir"},"Nesne Y\xf6nelimli Programlama Nedir?"),(0,n.kt)("p",null,"NYP, s\u0131n\u0131f ve nesneler kavram\u0131na dayanan bir yakla\u015f\u0131md\u0131r. Buradaki ama\xe7, program\u0131 daha k\xfc\xe7\xfck par\xe7alara b\xf6lerek y\xf6netilebilir ve yeniden kullan\u0131labilir hale getirmektir. Her par\xe7an\u0131n kendine has \xf6zelli\u011fi, verileri ve di\u011fer par\xe7alar ile nas\u0131l ileti\u015fim kuraca\u011f\u0131na dair bilgiler bar\u0131nd\u0131r\u0131r."),(0,n.kt)("p",null,"Ger\xe7ek hayattan al\u0131nm\u0131\u015f probleme dair modelin, ger\xe7ek hayatta var olan nesneler ve bu nesnelerin ili\u015fkilerinden faydalanarak olu\u015fturulmas\u0131n\u0131 ilke edinmi\u015ftir."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"NYP, h\u0131zl\u0131 ve uygulamas\u0131 kolay bir yakla\u015f\u0131md\u0131r."),(0,n.kt)("li",{parentName:"ul"},"NYP, programlar i\xe7in net bir yap\u0131 sa\u011flar."),(0,n.kt)("li",{parentName:"ul"},'NYP, "Don\'t Repeat Yourself" yani "Kendini Tekrar Etme" ilkesini uygular ve kodun bak\u0131m\u0131n\u0131, d\xfczenlenmesini ve hata ay\u0131klamas\u0131n\u0131 kolayla\u015ft\u0131r\u0131r.'),(0,n.kt)("li",{parentName:"ul"},"NYP, daha az kod ve daha k\u0131sa geli\u015ftirme s\xfcresiyle, yeniden kullan\u0131labilir uygulamalar olu\u015fturmay\u0131 m\xfcmk\xfcn k\u0131lar."),(0,n.kt)("li",{parentName:"ul"},"NYP, yap\u0131ya daha sonradan yeni \xf6zellikler ekleyerek geni\u015fletilebilirlik sa\u011flar."),(0,n.kt)("li",{parentName:"ul"},"NYP, problemleri ger\xe7ek hayattaki i\u015flemlere g\xf6re modeller.")),(0,n.kt)(r.Z,{chart:"\nflowchart LR;\nsubgraph sinif[S\u0131n\u0131f 1]\ndirection LR;\nisim & \xf6zellik & davran\u0131\u015f\nend\nsubgraph sinif2[S\u0131n\u0131f 2]\ndirection LR;\nisim2[isim] & \xf6zellike2[\xf6zelik] & davran\u0131\u015f2[davran\u0131\u015f]\nend\nsubgraph sinif3[S\u0131n\u0131f 3]\ndirection LR;\nisim3[isim] & \xf6zellik3[\xf6zellik] & davran\u0131\u015f3[davran\u0131\u015f]\nend\nsinif--\x3esinif2--\x3esinif--\x3esinif3--\x3esinif2 & sinif\nsinif2--\x3esinif3\n",mdxType:"Mermaid"}),(0,n.kt)("h2",{id:"nesne-ve-s\u0131n\u0131f-kavramlar\u0131"},"Nesne ve S\u0131n\u0131f Kavramlar\u0131"),(0,n.kt)("p",null,"Nesne belirli \xf6zelliklere sahip cisimlere deniyor. Asl\u0131nda programlama i\xe7inde de olu\u015fturdu\u011fumuz nesneler de bu mant\u0131kta belirli \xf6zelliklere sahiptir. \xd6rnek olarak bir kedinin rengi ile a\u011f\u0131rl\u0131\u011f\u0131 bu kedinin \xf6zellikleri denilebilir. Diyagram i\xe7inde isim, \xf6zellik ve davran\u0131\u015f demi\u015ftik. Buradaki kedinin davran\u0131\u015f\u0131 ise m\u0131rlamak veya uyumak kedinin \xf6zelli\u011fidir."))}p.isMDXComponent=!0}}]);